name: Continous Integration

on:
  push:
    branches:
      - 'dev'
  pull_request:

permissions:
  contents: write

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    environment: 
      name: saf-site-backend
    env:
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Install modules
        working-directory: ./
        run: yarn install --frozen-lockfile
      - name: Run Tests
        working-directory: ./
        run: yarn test
        env: 
          DATABASE_URL: postgresql://${{ secrets.DATABASE_USERNAME }}:${{ secrets.DATABASE_PASSWORD }}@localhost:5432/${{ secrets.DATABASE_NAME }}

  dependabot:
    name: 'Dependabot'
    needs: run-tests
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.3.1
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
